name: Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for axion-release-plugin

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build project
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew allTests

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for axion-release-plugin
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Check if release needed
        id: check_release
        run: |
          # Check if current commit is already tagged
          if git describe --exact-match --tags HEAD 2>/dev/null; then
            echo "Current commit is already tagged, skipping release"
            echo "skip_release=true" >> $GITHUB_OUTPUT
          else
            echo "No tag found for current commit, proceeding with release"
            echo "skip_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Create release
        if: steps.check_release.outputs.skip_release == 'false'
        run: ./gradlew release -Prelease.disableChecks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get current version
        if: steps.check_release.outputs.skip_release == 'false'
        id: get_version
        run: |
          VERSION=$(./gradlew currentVersion -q --console=plain | tail -1)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Publish to Maven Central
        if: steps.check_release.outputs.skip_release == 'false'
        run: ./gradlew publishAllPublicationsToMavenCentralRepository
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_SIGNING_PASSWORD }}

      - name: Create GitHub Release
        if: steps.check_release.outputs.skip_release == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          release_name: Release v${{ steps.get_version.outputs.version }}
          body: |
            Release v${{ steps.get_version.outputs.version }}
            
            ## Changes
            See the [CHANGELOG.md](CHANGELOG.md) for details.
          draft: false
          prerelease: false